name: 'git-get-release-action'
description: 'Get information about GitHub release'
author: 'cardinalby'
inputs:
  # Search by:
  releaseId:
    description: 'Release Id (number)'
    required: false
  tag:
    description: 'Tag name'
    required: false
  commitSha:
    description: 'SHA of commit'
    required: false
  releaseName:
    description: 'Release name (returns most recent found)'
    required: false
  releaseNameRegEx:
    description: 'Release name regex (returns most recent found)'
    required: false
  latest:
    description: 'Set `1` or `true` to get the latest release'
    required: false

  # Filters:
  draft:
    description: 'Filter by specified "draft" flag value. Left empty so as not to filter'
    required: false
  prerelease:
    description: 'Filter by specified "prerelease" flag value. Left empty so as not to filter'
    required: false

  # Options:
  doNotFailIfNotFound:
    description: 'Set `1` or `true` to exit with code 0 if release not found'
    required: false
    default: 'false'
  searchLimit:
    description: 'Optional, default: `90`. If you use `commitSha` or `releaseName` inputs you can also specify how many releases action should retrieve to perform a search'
    required: false
  repo:
    description: 'Repository name in form of "owner/name". Default: current repository.'
    required: false
outputs:
  html_url:
    description: 'html_url'
  upload_url:
    description: 'upload_url'
  tarball_url:
    description: 'tarball_url'
  zipball_url:
    description: 'zipball_url'
  id:
    description: 'id'
  tag_name:
    description: 'tag_name'
  target_commitish:
    description: 'target_commitish'
  name:
    description: 'name'
  draft:
    description: 'draft'
  prerelease:
    description: 'prerelease'
  created_at:
    description: 'created_at'
  published_at:
    description: 'published_at'
  url:
    description: 'url'
  assets_url:
    description: 'assets_url'
  node_id:
    description: 'node_id'
  author:
    description: 'JSON of author object'
  assets:
    description: 'JSON of assets object'
runs:
  using: 'node20'
  main: 'dist/index.js'
branding:
  icon: 'tag'
